這段 Verilog 程式碼實現了一個基於 8x8 LED 點陣顯示器的貪食蛇遊戲模組，主要功能包括蛇的移動、身體記憶、分數顯示，以及遊戲通關與結束的條件判斷。以下是程式的主要功能模組和邏輯說明：


 模組功能描述
1. 輸入與輸出
   - 輸入：
     - SYS_CLK：系統時鐘信號。
     - RST：重置信號，用於初始化遊戲。
     - PAUSE：暫停信號，控制遊戲的暫停狀態。
     - UP、DOWN、LEFT、RIGHT：方向控制按鍵，用於改變蛇的移動方向。
     - BCD：4 位元的 BCD (Binary-Coded Decimal) 信號，用於分數顯示。
   - 輸出：
     - LedR、LedG、LedB：紅、綠、藍三色 LED 顯示訊號，控制 8x8 LED 點陣燈的顏色。
     - comm：列選擇信號，用於掃描 LED 的行。
     - enable：LED 點陣使能信號。
     - point：分數數值。
     - seg：7 段數碼管顯示的分數。


 主要邏輯結構
1. 初始化 (initial block)
   - 設定 LED 初始狀態，包含蛇的初始位置 (頭和身體)、道具 (item_x, item_y) 位置，和遊戲的初始狀態 (進行中 state=2'b01)。
   - 初始蛇的長度設為 2，並清空多餘的蛇身資料。

2. 時鐘計數 (always @posedge SYS_CLK)
   - 遊戲時鐘 (game_clk)：控制遊戲更新的速度，例如蛇的移動間隔。
   - LED 時鐘 (led_clk)：控制 LED 點陣掃描的頻率，用於穩定顯示。

3. LED 顯示 (always @posedge led_clk)
   - 掃描 LED 的行，並根據分數 (point) 顯示不同顏色：
     - 分數大於等於 2 時顯示綠色。
     - 分數小於 2 時顯示藍色。
     - 遊戲結束時顯示通關畫面 (pass_pic)。

4. 按鍵控制方向 (always @UP, DOWN, LEFT, RIGHT)
   - 根據按鍵更新蛇的移動方向 (move_dir)。
   - 避免蛇反方向移動（例如向上時不可直接向下）。

5. 遊戲邏輯 (always @posedge game_clk)
   - 移動蛇頭：根據方向控制 (move_dir) 改變蛇頭的位置 (X, Y)。
   - 更新蛇身：
     - 根據新蛇頭位置，更新蛇的身體記憶 (body_mem_x, body_mem_y)。
     - 關閉蛇尾的 LED，保持正確顯示。
   - 道具判斷：
     - 若蛇吃到道具 (X == item_x 且 Y == item_y)，則分數加一 (point)，並重新隨機生成新道具位置。
   - 通關判斷：
     - 若分數達到特定條件，遊戲狀態轉為結束 (state=2'b10)。

6. 數碼管顯示分數 (always @point)
   - 使用 point 的低 4 位元顯示分數，根據數值顯示對應的 7 段數碼管圖形。


功能特點
- 透過 雙時鐘 控制 LED 顯示刷新頻率與遊戲進程，保證穩定性。
- 以簡單的 貪食蛇邏輯 實現遊戲，包括蛇身記憶、道具生成及吃到道具後的增長。
- 使用 LED 顯示顏色 區分分數高低，並在遊戲結束時顯示通關訊息。
- 簡單的按鍵控制實現多方向移動，並防止蛇逆向行進。
